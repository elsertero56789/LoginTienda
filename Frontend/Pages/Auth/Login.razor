@page "/Login"
@using Frontend.Services

<div class="mx-auto rounded border p-4 w-25">

    <h3 class="text-center mb-3">Login</h3>
    <hr />

    @if (error.Length > 0)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            <strong>@error</strong>
            <button type="button" class="btn btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="mb-3">
        <label class="form-label">Email</label>
        <input class="form-control" type="email" @bind="email" />
    </div>
    <div class="mb-3">
        <label class="form-label">Password</label>
        <input class="form-control" type="password" @bind="password" />
    </div>

    <div class="row">
        <div class="col d-flex">
            <button class="btn btn-primary" @onclick="LoginAsync">Log in </button>
        </div>
        <div class="col d-flex">
            <a class="btn btn-outline-primary" href="/" role="button">Cancel</a>
        </div>

    </div>



</div>

@inject AuthenticationStateProvider provider
@inject NavigationManager navigationManager
@code {
    public string email = "";
    public string password = "";
    public string error = "";
    private async Task LoginAsync()
    {
        var authStateProvider = (CustomAuthStateProvider)provider;
        var result = await authStateProvider.LoginAsincrono(email, password);
        if (result.Exito)
        {
            navigationManager.NavigateTo("/");

        }
        else
        {
            error = result.Errors[0];
        }
    }
}
